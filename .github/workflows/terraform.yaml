name: Terraform

on:
  push:
    branches: [ "main" ]
    paths: [ "terraform/dev/**" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "terraform/dev/**" ]

jobs:

  terraform:

    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    defaults:
      run:
        working-directory: ./terraform/dev

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}
      SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
      SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - run: terraform fmt -check -recursive
        working-directory: ./terraform
        id: fmt
      - run: terraform init
        id: init
      - run: terraform validate -no-color
        id: validate
      - if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        id: plan
      - if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
