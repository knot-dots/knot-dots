{
  "id": "a2cb1ea4-bc3d-4c91-9e83-21a197b37a52",
  "realm": "knot-dots",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": true,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "30fb0dbb-f9d7-4250-a810-e64bec8a3c88",
        "name": "default-roles-knot-dots",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "a2cb1ea4-bc3d-4c91-9e83-21a197b37a52",
        "attributes": {}
      },
      {
        "id": "1658f3d4-6fea-4075-9379-e80c3d7aeb63",
        "name": "sysadmin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "a2cb1ea4-bc3d-4c91-9e83-21a197b37a52",
        "attributes": {}
      },
      {
        "id": "a6c8b173-99df-44f2-bc74-35707aa96ecd",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "a2cb1ea4-bc3d-4c91-9e83-21a197b37a52",
        "attributes": {}
      },
      {
        "id": "7cc291eb-ffd0-4ff6-a87e-fe5c0c795c2e",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "a2cb1ea4-bc3d-4c91-9e83-21a197b37a52",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "c3935f42-4823-417e-88bb-452dc4004bb8",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "71087c30-5ee7-47e3-8466-1f9a4694348a",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "1c457e8c-89cf-4aed-ba0a-c9220fa34fd8",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "86401df1-50fb-43e5-853d-9e58a76509b0",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "dc355cf9-0b03-478d-8d33-c9eaca36bc02",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "6c15bb4a-6c47-4d01-b12b-dea9b2bb0ca0",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "7308892a-8857-4587-8588-83ad1b85b861",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "2cc43a82-1a84-4e77-910e-e16248d23bb4",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "impersonation",
                "view-identity-providers",
                "view-authorization",
                "manage-events",
                "query-groups",
                "manage-clients",
                "query-users",
                "view-realm",
                "manage-identity-providers",
                "query-clients",
                "query-realms",
                "view-users",
                "view-events",
                "manage-realm",
                "manage-authorization",
                "manage-users",
                "view-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "a68875ec-6b93-4aa6-82de-e78e290c3952",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "d8b42d5a-f75c-47a4-97dc-532d9ac0e5d6",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "0af5b695-cdeb-4fc5-8127-a7fc4371407a",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "a510d324-15ee-4e17-ad90-ef1e859d08e5",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "4c02daf0-cfcf-40d1-99cb-2e6b7bef76f5",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "6f23ddf7-851c-43f0-839e-9e9a5aa60dc3",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "d5f09229-bf5a-4b0c-b1ec-c84ad34c36b2",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "c637a984-cd8e-4231-85b6-f6ccfc4a6ea0",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "ba1c09ee-3941-41ab-820f-a56a4409fc74",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "d122544f-6070-48b8-b4a2-00039caed611",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        },
        {
          "id": "d09670da-3550-4add-b7c2-711689640d5c",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
          "attributes": {}
        }
      ],
      "knot-dots": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "be9eadd2-0c8b-4b47-9a89-b2e6a56bf40d",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "724ecb37-62bf-4352-a1a8-fafc84fd24dc",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "a99748bc-05f8-4cae-bc4f-a403eda3f27e",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "e1e84dbd-b298-4f1f-9176-7ad2db948315",
          "attributes": {}
        },
        {
          "id": "ec770a6d-01bf-49f9-bc69-042747233a55",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "e1e84dbd-b298-4f1f-9176-7ad2db948315",
          "attributes": {}
        },
        {
          "id": "b0d98762-94e8-437a-b1c5-aa221609794a",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e1e84dbd-b298-4f1f-9176-7ad2db948315",
          "attributes": {}
        },
        {
          "id": "5932cf0f-8ce3-477b-9c14-274d89a716b2",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "e1e84dbd-b298-4f1f-9176-7ad2db948315",
          "attributes": {}
        },
        {
          "id": "ddd7edb3-00ce-4f09-acc2-48aee6702363",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "e1e84dbd-b298-4f1f-9176-7ad2db948315",
          "attributes": {}
        },
        {
          "id": "bffa1331-5ecf-430a-b5d6-1aeac3f8d437",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "e1e84dbd-b298-4f1f-9176-7ad2db948315",
          "attributes": {}
        },
        {
          "id": "dce69a2a-33b6-4e6c-b45f-d8f7142e9c92",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "e1e84dbd-b298-4f1f-9176-7ad2db948315",
          "attributes": {}
        },
        {
          "id": "7e860a1b-6740-4e7f-a75f-fa2816a6af74",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e1e84dbd-b298-4f1f-9176-7ad2db948315",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "30fb0dbb-f9d7-4250-a810-e64bec8a3c88",
    "name": "default-roles-knot-dots",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "a2cb1ea4-bc3d-4c91-9e83-21a197b37a52"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "fdabddfc-77e2-44c7-9d45-7215f24689ec",
      "username": "admin@knotdots.net",
      "firstName": "Ada",
      "lastName": "Adagio",
      "email": "admin@knotdots.net",
      "emailVerified": true,
      "attributes": {
        "locale": [
          "de"
        ]
      },
      "createdTimestamp": 1761405211887,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "45d261bd-85ef-46c9-917e-4fa97df8a737",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1761405232620,
          "secretData": "{\"value\":\"YZcwpW1yiS84QV7QYZt9y6hMP/IlyebcqZJHL40pJek=\",\"salt\":\"HNCdu0Y3jO5WpVBynPA/VA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-knot-dots",
        "sysadmin"
      ],
      "clientRoles": {
        "realm-management": [
          "manage-users",
          "manage-clients"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "2d1096c8-f53a-4487-a296-2649f768d192",
      "username": "service-account-knot-dots",
      "emailVerified": false,
      "createdTimestamp": 1725307456922,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "knot-dots",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-knot-dots"
      ],
      "clientRoles": {
        "realm-management": [
          "manage-users",
          "manage-clients"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "e1e84dbd-b298-4f1f-9176-7ad2db948315",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/knot-dots/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/knot-dots/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bdb9320d-3138-450b-a0b1-f7383ae7814d",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/knot-dots/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/knot-dots/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "3e648208-2a06-485b-a274-166ffb93673c",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c92fffc9-984a-4881-8ee0-c83e07686b9f",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "724ecb37-62bf-4352-a1a8-fafc84fd24dc",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5341f745-cbe4-4201-a45e-6018d59f0095",
      "clientId": "knot-dots",
      "name": "knot dots",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "KmF1tDGwlVeZDunWRnn06QvVxvVUHcWU",
      "redirectUris": [
        "http://localhost:5173/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1725306422",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "use.jwks.url": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "05f2a160-190e-46a9-8cb5-7b102bd084c5",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1758d9e8-c155-4571-a6f6-5098b1fb62c3",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7c58dd72-dba1-4a04-98e7-3939a229b063",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "239a6baf-5bd0-48e0-8587-44f5c6e0a849",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4c2b2503-4bcf-4822-b1ce-99e710a6c86f",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/knot-dots/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/knot-dots/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "738d4aad-1eb3-407d-ab73-cd805841b846",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "5285c3a7-9df9-418b-a4f5-c9960c63bc51",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0d1f4db7-a5b1-4ade-b15f-f641dcac4a85",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "9b7d5909-9586-4f08-8d39-d6b0b996953e",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "dc23e544-23cc-458f-acb5-daec3ac340e3",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "5dd3dd5d-c8f4-45bd-9b70-2c30887aa1ae",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "190cf671-23b2-485a-84c1-7da0a3621763",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "855abb07-def1-4f25-a198-8fb85bfc4831",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e49fff1b-883e-4284-8dd7-27f35c9edd7f",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "57cab94a-9013-4c01-82c1-d261a4bfe673",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "3d07ffe0-934e-4882-943c-772e36e0b294",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3fd5e994-4b94-413a-a149-4e610b99f531",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "be2d93da-fee3-4ba7-b8f7-624a67a56e36",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "c6b5aabd-f3e5-4c7a-8442-d3cf89a4dd53",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a6c648fe-cf87-475b-bcdb-95b1631ae4e5",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "24f70c89-bccf-491c-89fa-f463a45806e7",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ff4f2d20-2c56-4be8-b270-8fa333c7b632",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "50769918-ed21-4416-8aed-7f96e5f14800",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "84b9d78f-4c90-42dd-8e6f-845f3de20e50",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "b7513a1c-6f16-43f6-82eb-067349e30440",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "7995a77b-7033-4d98-a0bd-989a890aacc4",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "bb4b40c1-243e-412e-a48e-9118a671ccb6",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "566be9e7-e05d-42fd-8625-51f0284661b8",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "5f48b288-b10f-420b-b842-f2757b8638ef",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "f98e10c0-ec14-4e9a-840a-1dc119af9fc6",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d2ba8b1e-180c-4b16-b58b-6fe757e89a27",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c42fe2de-3e97-4832-a9ed-b66a502e8274",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6590ecfa-62ee-4d7c-9145-47785e1806ea",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "88a97690-ba61-4ebd-af7a-1b67cc71f981",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8b74187f-d5fd-434c-8731-eeccb3bc2553",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3090dc56-dc97-402d-bd42-9ec5b31bc402",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f4f3fc99-6f76-40c7-bb15-89816bb3c668",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1f4216ad-6427-4e37-993c-b87e8cd2e3eb",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "00c5d385-3743-48ba-bb46-4e3fdeff0810",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "3c135e75-7167-4eb2-8768-b906cde6480d",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "662adec4-4ff7-44c6-8bdd-ea1ac17ca193",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "165c22d8-c296-4630-b50e-02c203e9b42d",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7d969daf-a789-4753-9b14-6443b3a13fb7",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b053e6da-0413-4d1a-968c-ae119cde4d3b",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "5c094483-217b-40da-9f7b-1f677a437c92",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "1d68f947-4efd-494f-a258-20baa89cc385",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "replyToDisplayName": "",
    "starttls": "false",
    "auth": "",
    "host": "smtp",
    "replyTo": "",
    "from": "no-reply@knotdots.net",
    "fromDisplayName": "knot dots",
    "envelopeFrom": "",
    "ssl": "false"
  },
  "loginTheme": "knot-dots",
  "accountTheme": "keycloak.v3",
  "adminTheme": "keycloak.v2",
  "emailTheme": "base",
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "46ccf5d3-715b-4c68-883c-f2af19b43646",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "cfaeab56-2a01-4ae7-9063-41ec2a931341",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "1318c389-d6b4-41a5-8d32-3af8bbcda0ba",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "042414b0-c0c8-40be-b947-64f5c4322655",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "8d17ebf0-68a6-47a8-b47a-4d5ca60137b3",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "61b866cd-74eb-49ad-a1e2-870d1b7c8bfe",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "fdd1f03a-a93f-468e-8320-4e8036f5c49f",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "d891a7b2-d8d4-4468-8ea5-f003c48d22f1",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "77b2a776-24af-44e9-85d1-d52ed06f12d0",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "b0ff4a2c-07c8-44ef-9cf5-703c382b4d66"
          ],
          "secret": [
            "QUWpmsRLtyfO4uT0BI9qHA"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "d4ee581d-a2a0-4756-82ea-181d3ac21e1a",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAzbTvVhwWnYVcahkWc5TcxSQ66aRa/f5kmFK3MTf1Cklsw8o5ev8Zo4+DUAibojlpG9Y/3Amd3vsL96y6zhF/cw9Ae399kyizhNmZoKPU50czO/vHf5rXRqSwvfHr9ppzsZ4f5Y815DsudY7k7JBLY6CFp2+Q009QzZPry4LW/jqWm3iCFikH2QxMEtQp4S8NnREln229ASGZdCk2dFozy1Ifv7BlCk6Z9wiz/nhjKv2hUHtD/qsQRcAXNSFRszIJImadjQpcahFlzi+ZkXzGb6TxD+kx3s+L5BfG/4nMsNeG6hqqNfkosrO0cMJw6d0dYPpbK94g5PowMNaXIlOUHQIDAQABAoIBAFCqUKZYSmgH6WbzopG9gNtP60g+uq3aadEvsoW69zzK8TtP3D2GtqOkfe5PCdTSJY0UdaNQJBfSI23CzthLFUrl4rfrFS+1aLxCZlOPm0f8bDNr9t3rttqNb3901D62b4LpyoFHKO9wY7YWzF+V7/JH+tFfVw/+DOYoyPDbxHoZg+/vAJWpVJXFvi9JpDkUFxC4ojW/KfjbvWW3/z8eHytDiqL1R+GnTAUuLRYZMRpvmN9y74QMLHUT3IWG2+9e5fEhPQYS7LoNwkIdAYqyMX1FtuuAYPox828uNpADceb9pvgSbuCpThzeTJP7vXbJ4zmnJ5ompUFWPi2FNWiw+UMCgYEA+MrA9kcfLqjDTFg7bg4G9x7Wc3xlXoKplsjWXx5tT6nXfM5tLf1wxQXG/IqTdoCGr4WbZwYwv1iQXOCdDmuVSgepGa+YyrWm8FZq+N9IobDptSZLJrzVbWk2sXVi3fhw+JXpiN7Hnuf1db3wI7vnPzT3jzaMvH7h0rCogxONNkcCgYEA06qgKW3yWi0egm+BVaPJnlykkKc3FyBNe7B0Z/KK/mehGRaWm4aAgf66NeseOYksCZ1LJYOKWAGonzoCyA0n+itrLbd7UDMWskC7/V+2Qs22DBnqqTFRcDnYdIsLJXaTbpR87Re9AihLoD3XzPZsOknZ5KTu0jyw7VgP4utxgHsCgYB3jNZUgbCWNzpBgVRteggWz5a1P91mINtlPXTlmDVmxnJp4rfMFbEOu8v2ppBdrT0LMuSOCQd7qw8T0ksmFsRSIoQ7d4mwPsHNU3lrxb+dEun6xj/uiWb1gE1r0MCFcVC34zGpN4Qs88Gbpn2ybiSc1tLu2oOeQEo7d/BBrC97GQKBgDzBHeWmXEjL6JTx4oKtV4Kv/sBSbrqhl/vnwxHPCVxKbHAiDqqnaZ1mexZc3TkQiWZdEqO65Our1jWV1hSLyizBZ6sgnjF/6ITTleH9Jfh4yUch7TwRHtoCkIGrI1DmfxzfXBhFlwfWfxaIibeYB6qXZgZ93NrVdsc5Xp34jISfAoGAMHPgpIx+WWyMo8CvUozjax56/Xxq9c3DYDkSxaPr6i0T3DrdlC5UTU4MvwygDd/B7ckXS7H4VGPFwCKV0+ODMVnT1RT07zQN0B48bI4fhQqtxMdg/4CgrdV5rBp39sB392MdmiGgwem3kx07q0X6Op0JsanjxHk4pQecqbwhP1w="
          ],
          "certificate": [
            "MIICoTCCAYkCBgGaG+3eGjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlrbm90LWRvdHMwHhcNMjUxMDI1MTUxMTA1WhcNMzUxMDI1MTUxMjQ1WjAUMRIwEAYDVQQDDAlrbm90LWRvdHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDNtO9WHBadhVxqGRZzlNzFJDrppFr9/mSYUrcxN/UKSWzDyjl6/xmjj4NQCJuiOWkb1j/cCZ3e+wv3rLrOEX9zD0B7f32TKLOE2Zmgo9TnRzM7+8d/mtdGpLC98ev2mnOxnh/ljzXkOy51juTskEtjoIWnb5DTT1DNk+vLgtb+OpabeIIWKQfZDEwS1CnhLw2dESWfbb0BIZl0KTZ0WjPLUh+/sGUKTpn3CLP+eGMq/aFQe0P+qxBFwBc1IVGzMgkiZp2NClxqEWXOL5mRfMZvpPEP6THez4vkF8b/icyw14bqGqo1+Siys7RwwnDp3R1g+lsr3iDk+jAw1pciU5QdAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAL1iHm0RhRcIM6Hnrj4FypC44VKNOHrxEyb9h811DtY5HAUBuMlzpAhC/YyDq+saux/oOT1j6EHqFTYCpb+LhLi7UTAWnn49XlODA4qkg8M4lF78vAG3fjIdaMewB4gX8rwvaNc6oERivA08esIRaMWsI15aixXzAk2Y0PUdp8AM/IvurU5Ed++Igy2nR4xTZPKejsQSDt0+qyEhso6EdH8CD6xSeIZc3V28BORsC1+oTMtmlQSqWQCwmBGvQUTTlkEAp+1AJfEgtAUtsh2uZIGGIXVS85BSaNSEEQRDrcnOYW5y/Ipo6P3LjkpnFDHTMgwHXqjvAYUhc7fghdtdYOg="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "b4d216a1-7f62-4167-b5d8-0437f20d6a05",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "5edb8031-0099-40ef-b18a-2ba47cc8caf6"
          ],
          "secret": [
            "NvKjvoObsgXu49krY0NvTssrNwCgerDayDD9tUzRSYdisVEmvJMb1pwxQ3nFXpvIAkxB0SatLWMxANFr1TWOorAs8C52ci3MlC1YK_PvO5qA9-3TPsVPrrpOWDIHWyfTf_Mh3HOeWDoLUcf82tDoXIsLT8Q0VM-l8eNvnNLc2KY"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "7afbe56b-d9aa-4e71-9309-5c1d94c503e0",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAmjMVXrvVGaW9l42gCpi6/FCSIEozsKacx4NDVekGp9fztEnCXhCbNveASUpeieERwC67jpb8Na73xEJ/k69XeihuR8B745VpnCkzgeh056momAL1xJ3/RRw3c+Upn7jMgZEBGHT0bHoxMZeg4fscEd971T2BSleZRiodmfxxBw3fH8Y/odeekJ84xVBkFiFM1c6DClIxQLqUJ7mZ/b02IkgJWQ9j6nhl6JUpAhy17vkVyX/ggp2eImEcpUDrK9s71R/K7DewIHEVwv7k9djbJrpU0iDLjplGHKl5cOPNly4WYci39G3PxGjHxowthlKoT1M6tjmucIKQvqvYpZ50VwIDAQABAoIBADifcIX4gGCqIWwg9/dcLTGQ3o/X35JLJEAJHfVSm/yPSrDV8vc6rtxo1yVSl1OXH78MChhqrhOCe/4IEzPmi79SUGitsHCaQY0z/fOCqkcVYFDtqVT5Va8JlP1MVdQOdp5PYnEaJVUeK6lTziKdZKnVgHIF40+qyiBfP753WgPmDJ2jbXv1QYhYHjYEIG9zeJZ9yN65nVX1muCwcc4SZiKEXAgHrirEWCdtzAZvj7HVkvKJqjRi+wFP5YxKQckaB4uFzzp93eLZRr4EidPOjI/uD8zenJkmK3n+joYbL3WY8hIc5nhOTSPuQA6wC+qWfG/H6X+/ql4QgViQNEy8mxECgYEAzUodmnq54a1nD0946fNYzlibMKzQn6ofdCe/I2768KR4wFs32g87p0rVv6IX8uUn3pwG56seo9QfDpqDoBGDEYUHrr99JY6jJme1aVsM2AozwUDXv0W3p37InI13CbKwClMcByrTttYGFMVZqy6LEmje236AElFla2dNJ/A052cCgYEAwEoxj5H8DycUoFhYY8kORBQFsBEXQWq/Y/My+x5NCuJgwnQI0hCyVBqeO7tY2zam6tSDniOyXS9JoAEX2crV2kprqSLZwjvnX7lfuk9S//PIQDDCqGOjL5x6qrmRoRVMgX8GNfEg5efCbBAdkALFH2eeTBWMxV8w5UUkSoYupZECgYEArXk30tZqRP4W3KU3c9qi7JuLaHJgSMulkK4VooehncAeGc37QFUm/5MJVMpQmnxyWHZYj2PWnHIfXGPNXnHt49waRdyikB4cV9PDRKggDl9wpJl6trLfIrbMJx6TvKo2gEMCqDvUc+gfc2XhA/psor3jtG8NIm2N2liMpncg/XkCgYEAv/JP/szvHAEa6eTGdvVgNDz4YITu/fIdExzVqy7YISFRDUre8zKPkLzxbxbY4BpyDMAOknF3vuVRTVNKB7IeP0VCqxeK4AUENd3J3SUJ6U3ke48xAP5VC1XcbUfIQ1ALisjN3lLRUC5FObHskLDzLSI2NiTc3LjlCjg2vd2r+sECgYBorc/CkvUJh4k7nVoIw7Yyc/iF+Zit5wkfTP6Kte05yDhkLA53M21Jqqgz8n+uVhKoxSWHeGA9QXRS7rkhdBOylJETzFwevvv5e+gvOW+j+WtdVpyjWibKrRf1sLQ2Pdq0WW3Mbdv8fEbtIDB5RMaC8GhRPa21EW4jg6/VHDbEPg=="
          ],
          "certificate": [
            "MIICoTCCAYkCBgGaG+3ecjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlrbm90LWRvdHMwHhcNMjUxMDI1MTUxMTA1WhcNMzUxMDI1MTUxMjQ1WjAUMRIwEAYDVQQDDAlrbm90LWRvdHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCaMxVeu9UZpb2XjaAKmLr8UJIgSjOwppzHg0NV6Qan1/O0ScJeEJs294BJSl6J4RHALruOlvw1rvfEQn+Tr1d6KG5HwHvjlWmcKTOB6HTnqaiYAvXEnf9FHDdz5SmfuMyBkQEYdPRsejExl6Dh+xwR33vVPYFKV5lGKh2Z/HEHDd8fxj+h156QnzjFUGQWIUzVzoMKUjFAupQnuZn9vTYiSAlZD2PqeGXolSkCHLXu+RXJf+CCnZ4iYRylQOsr2zvVH8rsN7AgcRXC/uT12NsmulTSIMuOmUYcqXlw482XLhZhyLf0bc/EaMfGjC2GUqhPUzq2Oa5wgpC+q9ilnnRXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJbN/KJsYoM/drYdrzn27B1gwtxm8RRVcZoRx+Ht1tDOc96AOkz7Rn4ylgsurDRTUuOMuVg+vKWGFffHAhKa0uI/jRWrHToM9AypTgQhtf8DUTSSpIf6TwGL7ZGrp77JiNY/F7khpZSdLYAEm7Kb8pNzFX+O/eq0GswsMstXoOQ5UAl5pur9hFB2iQju9HDtQc43d5ztAB83e1wuyDrdvu+uArhyTkBcLwRrl+qx7aqm7jqhWEg+ESFkUycTkvYF2CDXwBhOdZlZR3bPHCfsugb5bDZQy3Yj38vNMWSmUQxj95EpR2usGdMrw+hG0HuYgqZciBW1FUy1jEigEhH8Ns0="
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [
    "de",
    "en"
  ],
  "defaultLocale": "de",
  "authenticationFlows": [
    {
      "id": "3b27e86e-46b3-48f1-9ad3-82844b6ab7a5",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "09735009-5ae8-425a-ab02-851ba2cf620f",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fda2958a-4bc5-4769-8764-aa3e961147a7",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ea69f140-cee6-4083-99db-7d2f44dfaab2",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "12475b7f-5b5a-4fab-9dd0-be923c721441",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7d270202-5b39-4f6c-a481-a3671876ec0d",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1d36a628-e9d1-451e-a244-9aac526f4e7b",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5217464e-ebaf-472f-adaf-67608957a3ff",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5d78907a-7071-4335-aae9-7b64ee205082",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "96738152-d3e9-4076-a5d5-9e12ad11fd32",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a18b7e7e-858b-4b27-ac6c-97fdb8dae77e",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a2852589-f143-4c55-beb0-b9fcda31a389",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "88c04386-2a04-465f-af03-cc158a67aecf",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9513b720-1d27-47fa-b5e9-d0680a1f9e2b",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fdf43095-b6fd-415a-a41e-7260afbfeefb",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8ea30d6a-4f65-412a-a4ff-e558cde5c738",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "87dbad98-c496-4e02-8b62-e0b77f013f25",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b7c9e6a2-b6dd-4b3d-8707-0c05f9164c19",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "52ff13ed-b8a5-4284-948d-7a02c46441c3",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "e994d355-0e17-408e-99c9-fa70d9b726c2",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "organizationsEnabled": "false"
  },
  "keycloakVersion": "25.0.2",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
