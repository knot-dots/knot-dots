logging {
  level  = "debug"
  format = "json"
}

otelcol.receiver.otlp "this" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }

  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    metrics = [otelcol.processor.batch.this.input]
    traces  = [otelcol.processor.batch.this.input]
  }
}

otelcol.processor.batch "this" {
  output {
    metrics = [otelcol.exporter.prometheus.cockpit.input]
    traces  = [otelcol.exporter.otlphttp.cockpit.input]
  }
}

otelcol.exporter.otlphttp "cockpit" {
  client {
    endpoint = "https://traces.cockpit.fr-par.scw.cloud/otlp"
    headers  = {
      "X-Token" = env("SCW_COCKPIT_TOKEN"),
    }
  }
}

otelcol.exporter.prometheus "cockpit" {
  forward_to = [prometheus.remote_write.cockpit.receiver]
}

prometheus.remote_write "cockpit" {
    endpoint {
        url     = "https://metrics.cockpit.fr-par.scw.cloud/api/v1/push"
        headers = {
          "X-Token" = env("SCW_COCKPIT_TOKEN"),
        }
    }
}

discovery.kubernetes "pods" {
  role = "pod"

  namespaces {
    names = ["default"]
  }
}

loki.source.kubernetes "pods" {
  targets    = discovery.kubernetes.pods.targets
  forward_to = [loki.write.cockpit.receiver]
}

loki.write "cockpit" {
  endpoint {
    tenant_id = env("SCW_COCKPIT_TOKEN")
    url       = "https://logs.cockpit.fr-par.scw.cloud/loki/api/v1/push"
  }
}
